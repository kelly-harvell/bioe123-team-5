# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import winsound
import serial

ser = serial.Serial('COM9', baudrate=9600, timeout=1)

from pathlib import Path
import tkinter as tk
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\kelly\Desktop\BIOE 123\V3\assets\frame0")


def notification():
    print("Cycle Finished!")
    winsound.Beep(880, 800)
    winsound.Beep(880, 300)
    winsound.Beep(880, 300)
    winsound.Beep(880, 800)


def countdown(time):
    time -= 1
    msg = 'Counting Down: '
    status.config(text=f'{msg}{time} seconds')

    if time > 0:
        solve = window.after(1000, countdown, time)
        global c
        if c == 1:
            window.after_cancel(solve)
            window.after(1000, countdown, 1)
            c = 0

    elif time == 0:
        notification()


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def submit():
    setspeed = setspeed_var.get()
    centrifugetime = centrifugetime_var.get()
    message = str('<' + setspeed + ',' + centrifugetime + '>')
    ser.write(str(message).encode('ascii'))
    countdown(int(centrifugetime))
    global c
    c = 0

    setspeed_var.set("")
    centrifugetime_var.set("")


def stop():
    setspeed = '0'
    centrifugetime = '0'
    message = str('<' + setspeed + ',' + centrifugetime + '>')
    ser.write(str(message).encode('ascii'))
    global c
    c = 1


centrifugetime = 0
c = 0

window = Tk()

window.geometry("1280x832")
window.configure(bg="#2F2F2F")

canvas = Canvas(
    window,
    bg="#2F2F2F",
    height=832,
    width=1280,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
canvas.create_rectangle(
    0.0,
    0.0,
    1280.0,
    832.0,
    fill="#2B2B2B",
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    622.0,
    832.0,
    fill="#3E3E3E",
    outline="")

canvas.create_text(
    50.0,
    24.0,
    anchor="nw",
    text="Settings",
    fill="#9E55D7",
    font=("Courier New", 50 * -1)
)

centrifugetime_var = StringVar()
setspeed_var = StringVar()

entry_image_setspeed = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    311.5,
    214.0,
    image=entry_image_setspeed
)
entry_setspeed = Entry(
    textvariable=setspeed_var,
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)

entry_setspeed.pack()
entry_setspeed.bind()

entry_setspeed.place(
    x=185.0,
    y=183.0,
    width=253.0,
    height=60.0
)

entry_image_centrifugetime = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    311.5,
    346.5,
    image=entry_image_centrifugetime
)

entry_centrifugetime = Entry(
    textvariable=centrifugetime_var,
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)

entry_centrifugetime.pack()
entry_centrifugetime.bind()

entry_centrifugetime.place(
    x=184.5,
    y=316.0,
    width=254.0,
    height=59.0
)

canvas.create_text(
    154.0,
    156.0,
    anchor="nw",
    text="Set Speed (in RPM)",
    fill="#C08EE7",
    font=("Courier New", 20 * -1)  # old font = Inter Regular
)

canvas.create_text(
    154.0,
    289.0,
    anchor="nw",
    text="Spin Time (in seconds)",
    fill="#C08EE7",
    font=("Courier New", 20 * -1)
)

stop_button_image = PhotoImage(
    file=relative_to_assets("button_1.png"))
stop_button = Button(
    image=stop_button_image,
    borderwidth=0,
    highlightthickness=0,
    command=stop,
    relief="flat"
)
stop_button.place(
    x=186.0,
    y=664.0,
    width=261.8045349121094,
    height=61.2010498046875
)

start_button_image = PhotoImage(
    file=relative_to_assets("button_2.png"))

start_button = Button(
    image=start_button_image,
    borderwidth=0,
    highlightthickness=0,
    command=submit,
    relief="flat"
)

start_button.place(
    x=186.0,
    y=548.0,
    width=261.8045349121094,
    height=61.20106506347656
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    1108.0,
    416.0,
    image=image_image_1
)

status = tk.Label(window, text='Start Cycle')
status.place(relx=(window.winfo_screenwidth() // 2),
             rely=(window.winfo_screenwidth() // 2),
             anchor='center')
status.pack()

window.resizable(False, False)
window.mainloop()
